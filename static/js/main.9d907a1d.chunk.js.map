{"version":3,"sources":["components/TableHead/RowButtons/RowButtons.jsx","components/TableHead/TableHead.jsx","components/TableBody/TableRow/TableRow.jsx","components/TableBody/TableBody.jsx","App.js","serviceWorker.js","state.js","index.js"],"names":["Button","props","className","styleName","onClick","click","style","visibility","visible","transform","moveX","moveY","name","RowButtons","e","addRow","target","closest","children","addCell","state","transformY","minusRow","transformX","minusCell","TableHead","this","React","Component","TableData","cellSize","width","height","id","TableRow","tableElement","widthArray","map","cell","key","TableBody","heightArray","row","App","arrayCicle","current","array","i","push","tableFn","targetRow","targetTable","index","length","setState","targetButtonMinus","classList","contains","targetData","ref","setDisplay","lenghtArray","Math","random","Number","webkitTransform","replace","splice","bind","initialWidth","initialHeight","elem","display","onMouseMove","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d907a1d.chunk.js","sourcesContent":[" import React from 'react';\r\n\r\n const Button = (props) => {\r\n\r\n   return (\r\n     <td \r\n     className={`button ${props.styleName}`}\r\n     onClick={props.click}\r\n     style={ {visibility: props.visible , transform: `translate(${props.moveX * 100}%, ${props.moveY * 100}%)`}}\r\n     >{props.name}</td>\r\n   )\r\n }\r\n\r\n  const RowButtons = (props) => {\r\n   \r\n   const addData = (e) => {\r\n     props.addCell(e.target.closest('tr').children[3]);\r\n   }\r\n\r\n   const addRow = (e) => {\r\n     props.addRow(e.target.closest('tr').children[2]);\r\n   }\r\n\r\n   const minusCell = (e) => {\r\n     props.minusCell(e.target.closest('tr').children[3]);\r\n   }\r\n\r\n   const minusRow = (e) => {\r\n     props.minusRow(e.target.closest('tr').children[2]);\r\n   }\r\n  \r\n    return (\r\n      <tr className=\"row-buttons\">\r\n        <Button name=\"+\" styleName=\"button_plus-row \" click={addRow}  />\r\n        <Button name=\"+\" styleName=\"button_plus-data\" click={addData} />\r\n        <Button\r\n         name=\"-\"\r\n         visible={props.state.visibility} \r\n         moveX={0} \r\n         moveY={props.state.transformY} \r\n         styleName=\"button_minus-row button_minus\" \r\n         click={minusRow} />\r\n        <Button \r\n        name=\"-\" \r\n        visible={props.state.visibility} \r\n        moveY={0} moveX={props.state.transformX} \r\n        styleName=\"button_minus-data button_minus\" \r\n        click={minusCell} />\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  export default RowButtons;"," import React from 'react';\r\n import RowButtons from './RowButtons/RowButtons';\r\n\r\n class TableHead extends React.Component {\r\n\r\n  render() {\r\n  return (\r\n    <thead className=\"table__head\">\r\n      <RowButtons\r\n       addCell={this.props.addCell}\r\n       addRow={this.props.addRow}\r\n       minusCell={this.props.minusCell}\r\n       minusRow={this.props.minusRow}\r\n       state={this.props.state}\r\n       />\r\n    </thead>\r\n  )}\r\n}\r\n\r\nexport default TableHead; "," import React from 'react';\r\n\r\n  const TableData = (props) => {\r\n\r\n    let cellSize = props.state.cellSize;\r\n    return (\r\n     <td \r\n     className=\"table__data\" \r\n     style={{width: cellSize + 'px', height: cellSize + 'px'}}\r\n     >{props.id} </td>\r\n    )\r\n  }\r\n\r\n const TableRow = (props) => {\r\n\r\n  const tableElement = props.state.widthArray.map( cell => <TableData state={props.state}  key={cell.id} />)\r\n\r\n   return (\r\n     <tr className=\"table__row\">\r\n       {tableElement}\r\n     </tr>\r\n   )\r\n }\r\n\r\n export default TableRow;","import React from 'react';\r\nimport TableRow from './TableRow/TableRow';\r\n\r\nconst TableBody = (props) => {\r\n\r\n  const tableElement = props.state.heightArray.map( row => <TableRow state={props.state} key={row.id} />)\r\n\r\n  return (\r\n    <tbody className=\"table__body\">\r\n      {tableElement}\r\n  </tbody>\r\n  )\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\nimport './App.css';\nimport TableHead from './components/TableHead/TableHead';\nimport TableBody from './components/TableBody/TableBody';\n\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = this.props.state\n      this.tableFn = this.tableFn.bind(this)\n      this.addCell = this.addCell.bind(this)\n      this.addRow = this.addRow.bind(this)\n      this.minusCell = this.minusCell.bind(this)\n      this.minusRow = this.minusRow.bind(this)\n      this.setDisplay = this.setDisplay.bind(this)\n      this.arrayCicle = this.arrayCicle.bind(this)\n      this.arrayCicle(this.state.initialWidth, this.state.widthArray)\n      this.arrayCicle(this.state.initialHeight, this.state.heightArray)\n    }\n\n    arrayCicle = (current, array) => {\n      for (let i = 1; i <= current; i++) {\n        array.push({ id: i })\n      }\n    }\n\n    setDisplay (elem, display) {\n      elem.style.display = display;\n    }\n\n    tableFn = (e) => {\n      const target = e.target,\n        targetRow = e.target.closest('tr'),\n        targetTable = e.target.closest('tbody'),\n        index = e.target.closest('table').children[1].children.length;\n\n      if (targetRow != null && targetTable != null) {\n        for (let i = 0; i < index; i++) {\n          if (targetTable.children[i] === targetRow) {\n            this.setState({\n              transformY: i\n            })\n          }\n        };\n\n        for (let i = 0; i < targetRow.children.length; i++) {\n          if (targetRow.children[i] === target) {\n            this.setState({\n              transformX: i\n            })\n          }\n        };\n        \n      }\n\n      const targetButtonMinus = e.target.classList.contains('button_minus')\n      const targetData = e.target.classList.contains('table__data')\n       if (targetButtonMinus || targetData) {\n         this.setState({\n           visibility: 'visible'\n         })\n       } else {\n         this.setState({\n           visibility: 'hidden'\n         })\n       }\n    }\n\n    addCell = (ref) => {\n      const widthArray = this.state.widthArray;\n\n      if (widthArray.length === 1) {\n        this.setDisplay(ref, 'flex')\n      }\n      const lenghtArray = widthArray.length +  Math.random();\n      widthArray.push({id: lenghtArray})\n      this.setState ({\n        widthArray: widthArray\n      })\n    }\n    \n    addRow = (ref) => {\n      const heightArray = this.state.heightArray;\n\n      if (heightArray.length === 1) {\n        this.setDisplay(ref, 'flex')\n      }\n    \n      const lenghtArray = heightArray.length + Math.random();\n      heightArray.push({id:  lenghtArray})\n      this.setState ({\n        heightArray: heightArray\n      })\n    }\n\n    minusCell = (ref) => {\n      const widthArray = this.state.widthArray;\n\n      if (widthArray.length === 2) {\n        this.setDisplay(ref, 'none')\n      }\n    \n      const index = Number(ref.style.webkitTransform.replace(/\\D+/g, \"\")) / 1000;\n      widthArray.splice(index, 1);\n      this.setState ({\n        widthArray: widthArray\n      })\n\n      if (widthArray.length === index) {\n        this.setState({\n          transformX: this.state.transformX - 1\n        })\n      }\n    }\n\n    minusRow = (ref) => {\n      const heightArray = this.state.heightArray;\n\n      if (heightArray.length === 2) {\n        this.setDisplay(ref, 'none')\n      }\n    \n      const index = Number(ref.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\n        heightArray.splice(index, 1);\n        this.setState ({\n          heightArray: heightArray\n        })\n\n        if (heightArray.length === index) {\n          this.setState({\n            transformY: this.state.transformY - 1\n          })\n        }\n    }\n\nrender () {\n  return (\n    <div className=\"wrapper\">\n    <table className=\"table\" onMouseMove={this.tableFn}>\n      <TableHead \n        addCell={this.addCell}\n        addRow={this.addRow}\n        minusCell={this.minusCell}\n        minusRow={this.minusRow}\n        state={this.state}\n        />\n      <TableBody state={this.state} />\n    </table>\n  </div>\n  );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const state = {\r\n   widthArray: [],\r\n   heightArray: [],\r\n   cellSize: \"50\",\r\n   transformY: 1,\r\n   transformX: 1,\r\n   visibility: 'visible',\r\n   initialWidth: 4,\r\n   initialHeight: 4\r\n}\r\n\r\n\r\nexport default state","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport state from './state'\n\n\n\nReactDOM.render(<App state={state} />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}