{"version":3,"sources":["serviceWorker.js","components/Table__head/RowButtons/RowButtons.jsx","components/Table__head/Table__head.jsx","components/Table__body/Table__row/Table__row.jsx","components/Table__body/Table__body.jsx","App.js","redux.js","state.js","index.js"],"names":["Boolean","window","location","hostname","match","Button","props","className","styleName","onClick","click","ref","name","RowButtons","addRow","addCell","minusRow","minusCell","Table__head","Table__data","cellSize","state","style","width","height","Table__row","tableElement","widthArray","map","cell","Table__body","heightArray","row","App","renderEntireTree","ReactDOM","render","document","getElementById","console","log","length","setDisplay","push","id","minusData","querySelector","index","Number","webkitTransform","replace","splice","elem","display","arrayCicle","current","array","i","navigator","serviceWorker","ready","then","registration","unregister","table","tableRowAll","children","changeVisible","visibility","addEventListener","e","target","closest","parentElement","transform","targetTable","targetButton"],"mappings":"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","file":"static/js/main.46a7a15e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"," import React from 'react';\r\n import './RowButtons.css'\r\n\r\n\r\n const Button = (props) => {\r\n\r\n   return (\r\n     <td \r\n     className={`button ${props.styleName}`}\r\n     onClick={props.click}\r\n     ref={props.ref}\r\n     >{props.name}</td>\r\n   )\r\n }\r\n\r\n const RowButtons = (props) => {\r\n\r\n  let addData = () => {\r\n    props.addCell();\r\n  }\r\n\r\n  let addRow = () => {\r\n    props.addRow();\r\n  }\r\n\r\n  let minusCell = () => {\r\n    props.minusCell();\r\n  }\r\n\r\n  let minusRow = () => {\r\n    props.minusRow();\r\n  }\r\n\r\n  // let rowMinus = React.createRef();\r\n  \r\n   return (\r\n     <tr className=\"row-buttons\">\r\n       <Button name=\"+\" styleName=\"button_plus-row \" click={addRow} />\r\n       <Button name=\"+\" styleName=\"button_plus-data\" click={addData} />\r\n       <Button name=\"-\" styleName=\"button_minus-row button_minus\" click={minusRow}  />\r\n       <Button name=\"-\" styleName=\"button_minus-data button_minus\" click={minusCell} />\r\n     </tr>\r\n   )\r\n }\r\n\r\n export default RowButtons;"," import React from 'react';\r\n import s from './Table__head.module.css'\r\n import RowButtons from './RowButtons/RowButtons';\r\n\r\n const Table__head = (props) => {\r\n   return (\r\n     <thead className=\"table__head\">\r\n       <RowButtons\r\n        addCell={props.addCell}\r\n        addRow={props.addRow}\r\n        minusCell={props.minusCell}\r\n        minusRow={props.minusRow}\r\n        />\r\n     </thead>\r\n   )\r\n }\r\n\r\n export default Table__head;"," import React from 'react';\r\n import s from './Table__row.module.css'\r\n\r\n  const Table__data = (props) => {\r\n    let cellSize = props.state.cellSize;\r\n    return (\r\n     <td className=\"table__data\" style={{width: cellSize + 'px', height: cellSize + 'px'}}></td>\r\n    )\r\n  }\r\n\r\n const Table__row = (props) => {\r\n  \r\n  let tableElement = props.state.widthArray.map( cell => <Table__data state={props.state} />)\r\n\r\n   return (\r\n     <tr className=\"table__row\">\r\n       {tableElement}\r\n     </tr>\r\n   )\r\n }\r\n\r\n export default Table__row;","import React from 'react';\r\nimport s from './Table__body.module.css'\r\nimport Table__row from './Table__row/Table__row';\r\n\r\nconst Table__body = (props) => {\r\n\r\n  let tableElement = props.state.heightArray.map( row => <Table__row state={props.state} />)\r\n\r\n  return (\r\n    <tbody className=\"table__body\">\r\n      {tableElement}\r\n  </tbody>\r\n  )\r\n}\r\n\r\nexport default Table__body;","import React from 'react';\nimport './App.css';\nimport Table__head from './components/Table__head/Table__head';\nimport Table__body from './components/Table__body/Table__body';\n\n\nconst App = (props) => {\n\n  return (\n    <div className=\"wrapper\">\n    <table className=\"table\">\n      <Table__head \n        addCell={props.addCell}\n        addRow={props.addRow}\n        minusCell={props.minusCell}\n        minusRow={props.minusRow}\n        />\n      <Table__body state={props.state} />\n    </table>\n  </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {addCell} from './state'\r\nimport {addRow} from './state'\r\nimport {minusCell} from './state'\r\nimport {minusRow} from './state'\r\n\r\n\r\nexport let renderEntireTree = (state) => {\r\n  ReactDOM.render(<App \r\n    state={state}\r\n    addCell={addCell}\r\n    addRow={addRow}\r\n    minusCell={minusCell}\r\n    minusRow={minusRow}\r\n      />, document.getElementById('root'));\r\n}\r\n","import {renderEntireTree} from './redux'\r\n\r\nlet state = {\r\n   widthArray: [],\r\n   heightArray: [],\r\n   cellSize: \"50\"\r\n}\r\n\r\nlet initialWidth = 4;\r\n\r\nlet initialHeight = 4;\r\n\r\nexport let addCell = () => {\r\n  console.log(state.widthArray.length)\r\n  if (state.widthArray.length == 1) {\r\n    setDisplay('.button_minus-data', 'flex')\r\n  }\r\n\r\n  state.widthArray.push({id: 1})\r\n  renderEntireTree(state)\r\n}\r\n\r\nexport let addRow = () => {\r\n  if (state.heightArray.length == 1) {\r\n    setDisplay('.button_minus-row', 'flex')\r\n  }\r\n\r\n  state.heightArray.push({id: 1})\r\n  renderEntireTree(state)\r\n}\r\n\r\nexport let minusCell = () => {\r\n  if (state.widthArray.length == 2) {\r\n    setDisplay('.button_minus-data', 'none')\r\n  }\r\n  const minusData = document.querySelector('.button_minus-data');\r\n  let index = Number(minusData.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\r\n  state.widthArray.splice(index, 1)\r\n  renderEntireTree(state)\r\n}\r\n\r\nexport let minusRow = () => {\r\n  if (state.heightArray.length == 2) {\r\n    setDisplay('.button_minus-row', 'none')\r\n  }\r\n  const minusRow = document.querySelector('.button_minus-row');\r\n  let index = Number(minusRow.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\r\n    state.heightArray.splice(index, 1)\r\n    renderEntireTree(state)\r\n\r\n}\r\n\r\nfunction setDisplay (elem, display) {\r\n  document.querySelector(elem).style.display = display;\r\n}\r\n\r\nfunction arrayCicle (current, array) {\r\n  for (let i = 1; i <= current; i++) {\r\n    array.push({ id: i })\r\n  }\r\n}\r\n\r\narrayCicle(initialWidth, state.widthArray )\r\narrayCicle(initialHeight, state.heightArray )\r\n\r\n\r\n\r\n\r\n\r\nexport default state","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport state from './state'\nimport {renderEntireTree} from './redux'\n\n\n\nrenderEntireTree(state);\n\nserviceWorker.unregister();\n\n const plusRow = document.querySelector('.button_plus-row');\n const minusRow = document.querySelector('.button_minus-row');\n const plusData = document.querySelector('.button_plus-data');\n const minusData = document.querySelector('.button_minus-data');\n const tableRow = document.querySelector('.table__row');\n const table = document.querySelector('tbody');\n const tableRowAll = table.children;\n\n\n function addData(index, element, ) {\n   for (let i = 0; i < index; i++) {\n     const dataPlus = document.createElement('td');\n     dataPlus.className = 'table__data';\n\n     if (element == tableRowAll) {\n       element[i].appendChild(dataPlus);\n     } else {\n       element.appendChild(dataPlus);\n     }\n   }\n }\n\n function deleteData(index, indexMove) {\n   for (let i = 0; i < index; i++) {\n     const td = tableRowAll[i].children[indexMove];\n     tableRowAll[i].removeChild(td);\n   }\n }\n\n function changeDisplay(display, elem) {\n   elem.style.display = display;\n }\n\n//  plusData.addEventListener('click', function () {\n//    const index = tableRowAll.length;\n\n//    addData(index, tableRowAll)\n//    changeDisplay('flex', minusData);\n//  })\n\n function buttonMove(elem, axis, index) {\n   elem.style.transform = `${axis}(${index * 100 - 100}%)`;\n }\n\n//  minusData.addEventListener('click', function () {\n//    const index = tableRowAll.length,\n//      indexData = tableRowAll[0].children.length,\n//      indexMove = Number(minusData.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\n\n//    deleteData(index, indexMove);\n\n//    if (tableRow.children.length == indexMove) {\n//      buttonMove(minusData, 'translateX', indexMove);\n//    }\n\n//    if (indexData == 2) {\n//      changeDisplay('none', minusData);\n//    }\n\n//  })\n\n//  plusRow.addEventListener('click', function () {\n//    const index = tableRowAll[0].children.length,\n//      rowPlus = document.createElement('tr');\n\n//    rowPlus.className = 'table__row';\n//    table.appendChild(rowPlus);\n\n//    addData(index, rowPlus);\n//    changeDisplay('flex', minusRow);\n//  })\n\n//  minusRow.addEventListener('click', function () {\n//    const index = tableRowAll.length,\n//      indexMove = Number(minusRow.style.webkitTransform.replace(/\\D+/g, \"\")) / 100,\n//      tr = tableRowAll[indexMove];\n\n//    table.removeChild(tr);\n\n//    changeDisplay('flex', minusRow);\n\n//    if (index == 2) {\n//      changeDisplay('none', minusRow);\n//    }\n\n//    if (tableRowAll.length == indexMove) {\n//      buttonMove(minusRow, 'translateY', indexMove);\n//    }\n\n//  })\n\n table.addEventListener('mouseover', function (e) {\n   const index = tableRowAll.length,\n     row = e.target.closest('tr');\n\n   for (let i = 0; i < index; i++) {\n\n     if (row.parentElement.children[i] == row) {\n       minusRow.style.transform = `translateY(${i * 100}%)`;\n     }\n   }\n\n   for (let i = 0; i < row.children.length; i++) {\n     if (row.children[i] == e.target) {\n       minusData.style.transform = `translateX(${i * 100}%)`;\n     }\n   }\n })\n\n function changeVisible (elem, visibility) {\n   elem.style.visibility = visibility;\n }\n\n document.querySelector('body').addEventListener('mouseover', function (e) {\n   const targetTable = e.target.closest('tbody') == table,\n     targetButton = e.target.closest('.button_minus');\n\n   if (targetTable || targetButton) {\n     changeVisible(minusData,'visible');\n     changeVisible(minusRow,'visible');\n   }\n   if (!targetTable && !targetButton) {\n     changeVisible(minusRow,'hidden')\n     changeVisible(minusData,'hidden')\n   }\n })"],"sourceRoot":""}