{"version":3,"sources":["components/TableBody/TableRow/TableRow.jsx","components/TableBody/TableBody.jsx","App.js","serviceWorker.js","index.js","components/TableHead/RowButtons/RowButtons.jsx"],"names":["TableData","props","cellSize","className","style","width","height","TableRow","tableElement","widthArray","map","cell","key","id","TableBody","heightArray","row","App","arrayCicle","current","array","i","push","setDisplay","elem","display","visibilityButton","e","targetButtonMinus","target","classList","contains","targetData","setState","visibility","opacity","tableFn","targetRow","closest","targetTable","index","children","length","transformY","transformX","addCell","ref","state","lenghtArray","Math","random","addRow","minusCell","Number","webkitTransform","replace","splice","minusRow","initialWidth","initialHeight","bind","onMouseMove","this","RowButtons","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Button","btnClass","require","classNames","button","minusData","plusData","plusRow","data-button","data","visible","transform","moveX","moveY","name","addData","eventButtons","action","dataset","eval","onClick","styleName"],"mappings":"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","file":"static/js/main.1c3fc932.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableData = (props) => {\r\n\r\n  let cellSize = props.cellSize;\r\n  return (\r\n    < td\r\n      className=\"table__data\"\r\n      style={{ width: cellSize + 'px', height: cellSize + 'px' }}\r\n    ></td>\r\n  )\r\n}\r\n\r\nTableData.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n}\r\n\r\nconst TableRow = (props) => {\r\n\r\n  const tableElement = props.widthArray.map(cell => <TableData\r\n    cellSize={props.cellSize}\r\n    key={cell.id} />)\r\n\r\n  return (\r\n    <tr className=\"table__row\">\r\n      {tableElement}\r\n    </tr>\r\n  )\r\n}\r\n\r\nTableRow.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n  widthArray: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number).isRequired),\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport TableRow from './TableRow/TableRow';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableBody = (props) => {\r\n  const tableElement = props.heightArray.map(row => <TableRow\r\n    widthArray={props.widthArray}\r\n    cellSize={props.cellSize}\r\n    key={row.id} />)\r\n\r\n  return (\r\n    <tbody className=\"table__body\">\r\n      {tableElement}\r\n    </tbody>\r\n  )\r\n}\r\n\r\nTableBody.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n  heightArray: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number).isRequired),\r\n  widthArray: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number).isRequired),\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\nimport './App.css';\nimport TableBody from './components/TableBody/TableBody';\nimport RowButtons from './components/TableHead/RowButtons/RowButtons';\n\n// const state = {\n//   widthArray: [],\n//   heightArray: [],\n//   cellSize: 50,\n//   transformY: 1,\n//   transformX: 1,\n//   visibility: 'visible',\n//   initialWidth: 4,\n//   initialHeight: 4,\n//   opacity: 0\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widthArray: [],\n      heightArray: [],\n      cellSize: 50,\n      transformY: 1,\n      transformX: 1,\n      visibility: 'visible',\n      initialWidth: 4,\n      initialHeight: 4,\n      opacity: 0\n    }\n\n    this.visibilityButton = this.visibilityButton.bind(this)\n    this.tableFn = this.tableFn.bind(this)\n    this.addCell = this.addCell.bind(this)\n    this.addRow = this.addRow.bind(this)\n    this.minusCell = this.minusCell.bind(this)\n    this.minusRow = this.minusRow.bind(this)\n    this.setDisplay = this.setDisplay.bind(this)\n    this.arrayCicle = this.arrayCicle.bind(this)\n    this.arrayCicle(this.state.initialWidth, this.state.widthArray)\n    this.arrayCicle(this.state.initialHeight, this.state.heightArray)\n  }\n\n  arrayCicle = (current, array) => {\n    for (let i = 1; i <= current; i++) {\n      array.push({\n        id: i\n      })\n    }\n  }\n\n  setDisplay = (elem, display) => {\n    elem.style.display = display;\n  }\n\n  visibilityButton = (e) => {\n    const targetButtonMinus = e.target.classList.contains('button_minus')\n    const targetData = e.target.classList.contains('table__data')\n\n    if (targetButtonMinus || targetData) {\n      this.setState({\n        visibility: 'visible',\n        opacity: 1\n      })\n    } else {\n      this.setState({\n        visibility: 'hidden',\n        opacity: 0\n      })\n    }\n  }\n\n  tableFn = (e) => {\n    const target = e.target,\n      targetRow = e.target.closest('tr'),\n      targetTable = e.target.closest('tbody'),\n      index = e.target.closest('table').children[1].children.length;\n\n    if (targetRow != null && targetTable != null) {\n      for (let i = 0; i < index; i++) {\n        if (targetTable.children[i] === targetRow) {\n          this.setState({\n            transformY: i\n          })\n        }\n      };\n\n      for (let i = 0; i < targetRow.children.length; i++) {\n        if (targetRow.children[i] === target) {\n          this.setState({\n            transformX: i\n          })\n        }\n      };\n    }\n  }\n\n  addCell = (ref) => {\n    const widthArray = this.state.widthArray;\n\n    if (widthArray.length === 1) {\n      this.setDisplay(ref, 'flex')\n    }\n    const lenghtArray = widthArray.length + Math.random();\n    widthArray.push({\n      id: lenghtArray\n    })\n    this.setState({\n      widthArray: widthArray\n    })\n  }\n\n  addRow = (ref) => {\n    const heightArray = this.state.heightArray;\n\n    if (heightArray.length === 1) {\n      this.setDisplay(ref, 'flex')\n    }\n\n    const lenghtArray = heightArray.length + Math.random();\n    heightArray.push({\n      id: lenghtArray\n    })\n    this.setState({\n      heightArray: heightArray\n    })\n  }\n\n  minusCell = (ref) => {\n    const widthArray = this.state.widthArray;\n\n    if (widthArray.length === 2) {\n      this.setDisplay(ref, 'none')\n    }\n\n    const index = Number(ref.style.webkitTransform.replace(/\\D+/g, \"\")) / 1000;\n    widthArray.splice(index, 1);\n    this.setState({\n      widthArray: widthArray\n    })\n\n    if (widthArray.length === index) {\n      this.setState({\n        transformX: this.state.transformX - 1\n      })\n    }\n  }\n\n  minusRow = (ref) => {\n    const heightArray = this.state.heightArray;\n\n    if (heightArray.length === 2) {\n      this.setDisplay(ref, 'none')\n    }\n\n    const index = Number(ref.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\n    heightArray.splice(index, 1);\n    this.setState({\n      heightArray: heightArray\n    })\n\n    if (heightArray.length === index) {\n      this.setState({\n        transformY: this.state.transformY - 1\n      })\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"wrapper\" onMouseMove={this.visibilityButton} >\n        <table className=\"table\" onMouseMove={this.tableFn} >\n          <thead className=\"table__head\" >\n            <RowButtons addCell={this.addCell}\n              addRow={this.addRow}\n              minusCell={this.minusCell}\n              minusRow={this.minusRow}\n              visibility={this.state.visibility}\n              transformY={this.state.transformY}\n              transformX={this.state.transformX}\n              opacity={this.state.opacity}\n            />\n          </thead>\n          <TableBody\n            cellSize={this.state.cellSize}\n            widthArray={this.state.widthArray}\n            heightArray={this.state.heightArray} />\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    < App />\n    < App />\n  </div>, document.getElementById('root'));\n\nserviceWorker.unregister();\n// serviceWorker.unregister();","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n\r\n  let classNames = require('classnames');\r\n\r\n  const btnClass = classNames({\r\n    button: true,\r\n    'button_minus-data button_minus': props.minusData,\r\n    'button_minus-row button_minus': props.minusRow,\r\n    'button_plus-data button_plus': props.plusData,\r\n    'button_plus-row button_plus': props.plusRow,\r\n  })\r\n\r\n  return (\r\n    <td\r\n      className={btnClass}\r\n      // onClick={props.click}\r\n      data-button={props.data}\r\n      style={{\r\n        visibility: props.visible,\r\n        opacity: props.opacity,\r\n        transform: `translate(${props.moveX * 100}%, ${props.moveY * 100}%)`\r\n      }}\r\n    >{props.name}</td>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  // click: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  styleName: PropTypes.string.isRequired,\r\n  moveX: PropTypes.number,\r\n  moveY: PropTypes.number,\r\n  opacity: PropTypes.number,\r\n  visible: PropTypes.string,\r\n}\r\n\r\nconst RowButtons = (props) => {\r\n\r\n  const addData = (e) => {\r\n    for (let i = 0; i < e.target.closest('tr').children.length; i++) {\r\n\r\n      if (e.target.closest('tr').children[i].classList.contains('button_minus-data')) {\r\n        props.addCell(e.target.closest('tr').children[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const addRow = (e) => {\r\n    for (let i = 0; i < e.target.closest('tr').children.length; i++) {\r\n\r\n      if (e.target.closest('tr').children[i].classList.contains('button_minus-row')) {\r\n        props.addRow(e.target.closest('tr').children[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const minusCell = (e) => {\r\n    props.minusCell(e.target);\r\n  }\r\n\r\n  const minusRow = (e) => {\r\n    props.minusRow(e.target);\r\n  }\r\n\r\n  const eventButtons = (e) => {\r\n    const action = e.target.dataset.button\r\n\r\n    if (action) {\r\n      eval([action] + '(e)')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr className=\"row-buttons\" onClick={eventButtons}>\r\n      <Button\r\n        data=\"addRow\"\r\n        name=\"+\" styleName=\"button_plus-row \"\r\n        // click={addRow} \r\n        plusRow={' '}\r\n      />\r\n      <Button\r\n        data=\"addData\"\r\n        name=\"+\" styleName=\"button_plus-data\"\r\n        // click={addData} \r\n        plusData={' '}\r\n      />\r\n      <Button\r\n        data=\"minusRow\"\r\n        name=\"-\"\r\n        visible={props.visibility}\r\n        opacity={props.opacity}\r\n        moveX={0}\r\n        moveY={props.transformY}\r\n        styleName=\"button_minus-row\"\r\n        // click={minusRow}\r\n        minusRow={' '}\r\n      />\r\n      <Button\r\n        data=\"minusCell\"\r\n        name=\"-\"\r\n        opacity={props.opacity}\r\n        visible={props.visibility}\r\n        moveY={0}\r\n        moveX={props.transformX}\r\n        styleName=\"button_minus-data \"\r\n        // click={minusCell}\r\n        minusData={' '}\r\n      />\r\n    </tr>\r\n  )\r\n}\r\n\r\nRowButtons.propTypes = {\r\n  addCell: PropTypes.func.isRequired,\r\n  addRow: PropTypes.func.isRequired,\r\n  minusCell: PropTypes.func.isRequired,\r\n  minusRow: PropTypes.func.isRequired,\r\n  opacity: PropTypes.number,\r\n  transformX: PropTypes.number,\r\n  transformY: PropTypes.number,\r\n}\r\n\r\nexport default RowButtons;"],"sourceRoot":""}