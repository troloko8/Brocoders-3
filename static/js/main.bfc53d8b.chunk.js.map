{"version":3,"sources":["serviceWorker.js","components/Table__head/RowButtons/RowButtons.jsx","components/Table__head/Table__head.jsx","components/Table__body/Table__row/Table__row.jsx","components/Table__body/Table__body.jsx","App.js","redux.js","state.js","index.js"],"names":["Boolean","window","location","hostname","match","Button","props","className","styleName","onClick","click","style","visibility","visible","transform","moveX","moveY","ref","refer","name","RowButtons","rowMinus","React","createRef","dataMinus","addRow","addCell","state","transformY","minusRow","transformX","minusCell","TableHead","TableData","cellSize","width","height","id","TableRow","tableElement","widthArray","map","cell","key","TableBody","heightArray","row","App","tableRef","onMouseMove","e","target","targetRow","closest","targetTable","index","current","children","length","table","moveButton","renderEntireTree","ReactDOM","render","document","getElementById","setDisplay","lenghtArray","Math","random","push","console","log","Number","webkitTransform","replace","splice","elem","display","arrayCicle","array","i","tRow","tTable","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfc53d8b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"," import React from 'react';\r\n import './RowButtons.css'\r\n\r\n\r\n const Button = (props) => {\r\n\r\n   return (\r\n     <td \r\n     className={`button ${props.styleName}`}\r\n     onClick={props.click}\r\n     style={ {visibility: props.visible , transform: `translate(${props.moveX * 100}%, ${props.moveY * 100}%)`}}\r\n     ref={props.refer}\r\n     >{props.name}</td>\r\n   )\r\n }\r\n\r\n const RowButtons = (props) => {\r\n\r\n  const rowMinus = React.createRef();\r\n  const dataMinus = React.createRef();\r\n\r\n  const addData = () => {\r\n    props.addCell(dataMinus);\r\n  }\r\n\r\n  const addRow = () => {\r\n    props.addRow(rowMinus);\r\n  }\r\n\r\n  const minusCell = () => {\r\n    props.minusCell(dataMinus);\r\n  }\r\n\r\n  const minusRow = () => {\r\n    props.minusRow(rowMinus);\r\n  }\r\n  \r\n   return (\r\n     <tr className=\"row-buttons\">\r\n       <Button name=\"+\" styleName=\"button_plus-row \" click={addRow}  />\r\n       <Button name=\"+\" styleName=\"button_plus-data\" click={addData} />\r\n       <Button\r\n        refer={rowMinus}\r\n        name=\"-\"\r\n        visible={props.state.visibility} \r\n        moveX={0} \r\n        moveY={props.state.transformY} \r\n        styleName=\"button_minus-row button_minus\" \r\n        click={minusRow} />\r\n       <Button \r\n       refer={dataMinus}\r\n       name=\"-\" \r\n       visible={props.state.visibility} \r\n       moveY={0} moveX={props.state.transformX} \r\n       styleName=\"button_minus-data button_minus\" \r\n       click={minusCell} />\r\n     </tr>\r\n   )\r\n }\r\n\r\n export default RowButtons;"," import React from 'react';\r\n import RowButtons from './RowButtons/RowButtons';\r\n\r\n const TableHead = (props) => {\r\n   return (\r\n     <thead className=\"table__head\">\r\n       <RowButtons\r\n        addCell={props.addCell}\r\n        addRow={props.addRow}\r\n        minusCell={props.minusCell}\r\n        minusRow={props.minusRow}\r\n        state={props.state}\r\n        />\r\n     </thead>\r\n   )\r\n }\r\n\r\n export default TableHead;"," import React from 'react';\r\n\r\n  const TableData = (props) => {\r\n\r\n    let cellSize = props.state.cellSize;\r\n    return (\r\n     <td \r\n     className=\"table__data\" \r\n     style={{width: cellSize + 'px', height: cellSize + 'px'}}\r\n     >{props.id} </td>\r\n    )\r\n  }\r\n\r\n const TableRow = (props) => {\r\n\r\n  const tableElement = props.state.widthArray.map( cell => <TableData state={props.state}  key={cell.id} />)\r\n\r\n   return (\r\n     <tr className=\"table__row\">\r\n       {tableElement}\r\n     </tr>\r\n   )\r\n }\r\n\r\n export default TableRow;","import React from 'react';\r\nimport TableRow from './Table__row/Table__row';\r\n\r\nconst TableBody = (props) => {\r\n\r\n  const tableElement = props.state.heightArray.map( row => <TableRow state={props.state} key={row.id} />)\r\n\r\n  return (\r\n    <tbody className=\"table__body\">\r\n      {tableElement}\r\n  </tbody>\r\n  )\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\nimport './App.css';\nimport TableHead from './components/Table__head/Table__head';\nimport TableBody from './components/Table__body/Table__body';\n\n\nconst App = (props) => {\nconst tableRef = React.createRef();\n\nconst tableFn = (e) => {\n  const target = e.target,\n   targetRow = e.target.closest('tr'),\n   targetTable = e.target.closest('tbody'),\n   index = tableRef.current.children[1].children.length,\n   table = tableRef.current.className === 'table';\n  props.moveButton(targetRow, targetTable, index, target, table)\n}\n\n  return (\n    <div className=\"wrapper\">\n    <table className=\"table\" ref={tableRef} onMouseMove={tableFn}>\n      <TableHead \n        addCell={props.addCell}\n        addRow={props.addRow}\n        minusCell={props.minusCell}\n        minusRow={props.minusRow}\n        state={props.state}\n        />\n      <TableBody state={props.state} />\n    </table>\n  </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {addCell} from './state'\r\nimport {addRow} from './state'\r\nimport {minusCell} from './state'\r\nimport {minusRow} from './state'\r\nimport {moveButton} from './state'\r\n\r\n\r\nexport let renderEntireTree = (state) => {\r\n  ReactDOM.render(<App \r\n    state={state}\r\n    addCell={addCell}\r\n    addRow={addRow}\r\n    minusCell={minusCell}\r\n    minusRow={minusRow}\r\n    moveButton={moveButton}\r\n      />, document.getElementById('root'));\r\n}\r\n","import {renderEntireTree} from './redux'\r\n\r\nconst state = {\r\n   widthArray: [],\r\n   heightArray: [],\r\n   cellSize: \"50\",\r\n   transformY: 1,\r\n   transformX: 1,\r\n   visibility: 'visible'\r\n}\r\n\r\nconst initialWidth = 4;\r\n\r\nconst initialHeight = 4;\r\n\r\nexport const addCell = (ref) => {\r\n  if (state.widthArray.length === 1) {\r\n    setDisplay(ref, 'flex')\r\n  }\r\n  const lenghtArray = state.widthArray.length +  Math.random();\r\n  state.widthArray.push({id: lenghtArray})\r\n  renderEntireTree(state)\r\n}\r\n\r\nexport const addRow = (ref) => {\r\n  if (state.heightArray.length === 1) {\r\n    setDisplay(ref, 'flex')\r\n  }\r\n  console.log()\r\n  const lenghtArray = state.heightArray.length + Math.random();\r\n  state.heightArray.push({id:  lenghtArray})\r\n  renderEntireTree(state)\r\n}\r\n\r\nexport const minusCell = (ref) => {\r\n\r\n  if (state.widthArray.length === 2) {\r\n    setDisplay(ref, 'none')\r\n  }\r\n\r\n  const index = Number(ref.current.style.webkitTransform.replace(/\\D+/g, \"\")) / 1000;\r\n  state.widthArray.splice(index, 1);\r\n  // state.transformX -= 1;\r\n  renderEntireTree(state)\r\n}\r\n\r\nexport const minusRow = (ref) => {\r\n\r\n  if (state.heightArray.length === 2) {\r\n    setDisplay(ref, 'none')\r\n  }\r\n\r\n  const index = Number(ref.current.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\r\n    state.heightArray.splice(index, 1);\r\n    // state.transformY -= 1;\r\n    renderEntireTree(state);\r\n\r\n}\r\n\r\nfunction setDisplay (elem, display) {\r\n  elem.current.style.display = display;\r\n}\r\n\r\nfunction arrayCicle (current, array) {\r\n  for (let i = 1; i <= current; i++) {\r\n    array.push({ id: i })\r\n  }\r\n}\r\n\r\nexport const moveButton = (tRow, tTable, index, target, table) => {\r\n\r\n  if (tRow != null && tTable != null ) {\r\n    for (let i = 0; i < index; i++) {\r\n      if (tTable.children[i] === tRow) {\r\n        state.transformY = i;\r\n      }\r\n    };\r\n\r\n    for (let i = 0; i < tRow.children.length; i++) {\r\n      if(tRow.children[i] === target) {\r\n        state.transformX = i;\r\n      }\r\n    };\r\n\r\n    if (table) {\r\n      state.visibility = 'visible'\r\n    } else {\r\n      state.visibility = 'hidden'\r\n    }\r\n    \r\n    renderEntireTree(state);\r\n  }\r\n}\r\n\r\narrayCicle(initialWidth, state.widthArray )\r\narrayCicle(initialHeight, state.heightArray )\r\n\r\n\r\n\r\n\r\n\r\nexport default state","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport state from './state'\nimport {renderEntireTree} from './redux'\n\n\n\nrenderEntireTree(state);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}