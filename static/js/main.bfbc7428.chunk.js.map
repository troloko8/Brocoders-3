{"version":3,"sources":["components/TableBody/TableRow/TableRow.jsx","components/TableBody/TableBody.jsx","components/TableHead/RowButtons/RowButtons.jsx","App.js","serviceWorker.js","index.js"],"names":["TableData","props","cellSize","className","style","width","height","TableRow","tableElement","widthArray","map","cell","key","id","TableBody","heightArray","row","Button","btnClass","require","classNames","button","minusData","minusRow","plusData","plusRow","onClick","click","visibility","visible","opacity","transform","moveX","moveY","name","RowButtons","styleName","e","i","target","closest","children","length","classList","contains","addRow","addCell","transformY","transformX","minusCell","App","arrayCicle","current","array","push","setDisplay","elem","display","visibilityButton","targetButtonMinus","targetData","setState","tableFn","targetRow","targetTable","index","ref","state","lenghtArray","Math","random","Number","webkitTransform","replace","splice","initialWidth","initialHeight","bind","onMouseMove","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gQAGMA,G,MAAY,SAACC,GAEjB,IAAIC,EAAWD,EAAMC,SACrB,OACE,wBACEC,UAAU,cACVC,MAAO,CAAEC,MAAOH,EAAW,KAAMI,OAAQJ,EAAW,UA2B3CK,EAlBE,SAACN,GAEhB,IAAMO,EAAeP,EAAMQ,WAAWC,IAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAChDT,SAAUD,EAAMC,SAChBU,IAAKD,EAAKE,OAEZ,OACE,wBAAIV,UAAU,cACXK,ICHQM,EAnBG,SAACb,GACjB,IAAMO,EAAeP,EAAMc,YAAYL,IAAI,SAAAM,GAAG,OAAI,kBAAC,EAAD,CAChDP,WAAYR,EAAMQ,WAClBP,SAAUD,EAAMC,SAChBU,IAAKI,EAAIH,OAEX,OACE,2BAAOV,UAAU,eACdK,ICTDS,EAAS,SAAChB,GAEd,IAEMiB,EAFWC,EAAQ,GAERC,CAAW,CAC1BC,QAAQ,EACR,iCAAkCpB,EAAMqB,UACxC,gCAAiCrB,EAAMsB,SACvC,+BAAgCtB,EAAMuB,SACtC,8BAA+BvB,EAAMwB,UAGvC,OACE,wBACEtB,UAAWe,EACXQ,QAASzB,EAAM0B,MACfvB,MAAO,CACLwB,WAAY3B,EAAM4B,QAClBC,QAAS7B,EAAM6B,QACfC,UAAU,aAAD,OAA6B,IAAd9B,EAAM+B,MAArB,cAAoD,IAAd/B,EAAMgC,MAA5C,QAEXhC,EAAMiC,OAgFGC,EAlEI,SAAClC,GA4BlB,OACE,wBAAIE,UAAU,eACZ,kBAAC,EAAD,CAAQ+B,KAAK,IAAIE,UAAU,mBAAmBT,MAnBnC,SAACU,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEE,OAAOC,QAAQ,MAAMC,SAASC,OAAQJ,IAEtDD,EAAEE,OAAOC,QAAQ,MAAMC,SAASH,GAAGK,UAAUC,SAAS,qBACxD3C,EAAM4C,OAAOR,EAAEE,OAAOC,QAAQ,MAAMC,SAASH,KAecb,QAAS,MACtE,kBAAC,EAAD,CAAQS,KAAK,IAAIE,UAAU,oBAAoBT,MA7BnC,SAACU,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEE,OAAOC,QAAQ,MAAMC,SAASC,OAAQJ,IAEtDD,EAAEE,OAAOC,QAAQ,MAAMC,SAASH,GAAGK,UAAUC,SAAS,sBACxD3C,EAAM6C,QAAQT,EAAEE,OAAOC,QAAQ,MAAMC,SAASH,KAyBed,SAAU,MACzE,kBAAC,EAAD,CACEU,KAAK,IACLL,QAAS5B,EAAM2B,WACfE,QAAS7B,EAAM6B,QACfE,MAAO,EACPC,MAAOhC,EAAM8C,WACbX,UAAU,mBACVT,MAfW,SAACU,GAChBpC,EAAMsB,SAASc,EAAEE,SAebhB,SAAU,MAEZ,kBAAC,EAAD,CACEW,KAAK,IACLJ,QAAS7B,EAAM6B,QACfD,QAAS5B,EAAM2B,WACfK,MAAO,EACPD,MAAO/B,EAAM+C,WACbZ,UAAU,qBACVT,MA7BY,SAACU,GACjBpC,EAAMgD,UAAUZ,EAAEE,SA6BdjB,UAAW,QC0GJ4B,E,YAhLb,WAAYjD,GAAQ,IAAD,8BACjB,4CAAMA,KAwBRkD,WAAa,SAACC,EAASC,GACrB,IAAK,IAAIf,EAAI,EAAGA,GAAKc,EAASd,IAC5Be,EAAMC,KAAK,CACTzC,GAAIyB,KA5BS,EAiCnBiB,WAAa,SAACC,EAAMC,GAClBD,EAAKpD,MAAMqD,QAAUA,GAlCJ,EAqCnBC,iBAAmB,SAACrB,GAClB,IAAMsB,EAAoBtB,EAAEE,OAAOI,UAAUC,SAAS,gBAChDgB,EAAavB,EAAEE,OAAOI,UAAUC,SAAS,eAE3Ce,GAAqBC,EACvB,EAAKC,SAAS,CACZjC,WAAY,UACZE,QAAS,IAGX,EAAK+B,SAAS,CACZjC,WAAY,SACZE,QAAS,KAjDI,EAsDnBgC,QAAU,SAACzB,GACT,IAAME,EAASF,EAAEE,OACfwB,EAAY1B,EAAEE,OAAOC,QAAQ,MAC7BwB,EAAc3B,EAAEE,OAAOC,QAAQ,SAC/ByB,EAAQ5B,EAAEE,OAAOC,QAAQ,SAASC,SAAS,GAAGA,SAASC,OAEzD,GAAiB,MAAbqB,GAAoC,MAAfC,EAAqB,CAC5C,IAAK,IAAI1B,EAAI,EAAGA,EAAI2B,EAAO3B,IACrB0B,EAAYvB,SAASH,KAAOyB,GAC9B,EAAKF,SAAS,CACZd,WAAYT,IAKlB,IAAK,IAAIA,EAAI,EAAGA,EAAIyB,EAAUtB,SAASC,OAAQJ,IACzCyB,EAAUtB,SAASH,KAAOC,GAC5B,EAAKsB,SAAS,CACZb,WAAYV,MAxEH,EA+EnBQ,QAAU,SAACoB,GACT,IAAMzD,EAAa,EAAK0D,MAAM1D,WAEJ,IAAtBA,EAAWiC,QACb,EAAKa,WAAWW,EAAK,QAEvB,IAAME,EAAc3D,EAAWiC,OAAS2B,KAAKC,SAC7C7D,EAAW6C,KAAK,CACdzC,GAAIuD,IAEN,EAAKP,SAAS,CACZpD,WAAYA,KA1FG,EA8FnBoC,OAAS,SAACqB,GACR,IAAMnD,EAAc,EAAKoD,MAAMpD,YAEJ,IAAvBA,EAAY2B,QACd,EAAKa,WAAWW,EAAK,QAGvB,IAAME,EAAcrD,EAAY2B,OAAS2B,KAAKC,SAC9CvD,EAAYuC,KAAK,CACfzC,GAAIuD,IAEN,EAAKP,SAAS,CACZ9C,YAAaA,KA1GE,EA8GnBkC,UAAY,SAACiB,GACX,IAAMzD,EAAa,EAAK0D,MAAM1D,WAEJ,IAAtBA,EAAWiC,QACb,EAAKa,WAAWW,EAAK,QAGvB,IAAMD,EAAQM,OAAOL,EAAI9D,MAAMoE,gBAAgBC,QAAQ,OAAQ,KAAO,IACtEhE,EAAWiE,OAAOT,EAAO,GACzB,EAAKJ,SAAS,CACZpD,WAAYA,IAGVA,EAAWiC,SAAWuB,GACxB,EAAKJ,SAAS,CACZb,WAAY,EAAKmB,MAAMnB,WAAa,KA7HvB,EAkInBzB,SAAW,SAAC2C,GACV,IAAMnD,EAAc,EAAKoD,MAAMpD,YAEJ,IAAvBA,EAAY2B,QACd,EAAKa,WAAWW,EAAK,QAGvB,IAAMD,EAAQM,OAAOL,EAAI9D,MAAMoE,gBAAgBC,QAAQ,OAAQ,KAAO,IACtE1D,EAAY2D,OAAOT,EAAO,GAC1B,EAAKJ,SAAS,CACZ9C,YAAaA,IAGXA,EAAY2B,SAAWuB,GACzB,EAAKJ,SAAS,CACZd,WAAY,EAAKoB,MAAMpB,WAAa,KA/IxC,EAAKoB,MAAQ,CACX1D,WAAY,GACZM,YAAa,GACbb,SAAU,GACV6C,WAAY,EACZC,WAAY,EACZpB,WAAY,UACZ+C,aAAc,EACdC,cAAe,EACf9C,QAAS,GAEX,EAAK4B,iBAAmB,EAAKA,iBAAiBmB,KAAtB,gBACxB,EAAKf,QAAU,EAAKA,QAAQe,KAAb,gBACf,EAAK/B,QAAU,EAAKA,QAAQ+B,KAAb,gBACf,EAAKhC,OAAS,EAAKA,OAAOgC,KAAZ,gBACd,EAAK5B,UAAY,EAAKA,UAAU4B,KAAf,gBACjB,EAAKtD,SAAW,EAAKA,SAASsD,KAAd,gBAChB,EAAKtB,WAAa,EAAKA,WAAWsB,KAAhB,gBAClB,EAAK1B,WAAa,EAAKA,WAAW0B,KAAhB,gBAClB,EAAK1B,WAAW,EAAKgB,MAAMQ,aAAc,EAAKR,MAAM1D,YACpD,EAAK0C,WAAW,EAAKgB,MAAMS,cAAe,EAAKT,MAAMpD,aAtBpC,E,sEAwJjB,OACE,yBAAKZ,UAAU,UAAU2E,YAAaC,KAAKrB,kBACzC,2BAAOvD,UAAU,QAAQ2E,YAAaC,KAAKjB,SACzC,2BAAO3D,UAAU,eACf,kBAAC,EAAD,CAAY2C,QAASiC,KAAKjC,QACxBD,OAAQkC,KAAKlC,OACbI,UAAW8B,KAAK9B,UAChB1B,SAAUwD,KAAKxD,SACfK,WAAYmD,KAAKZ,MAAMvC,WACvBmB,WAAYgC,KAAKZ,MAAMpB,WACvBC,WAAY+B,KAAKZ,MAAMnB,WACvBlB,QAASiD,KAAKZ,MAAMrC,WAGxB,kBAAC,EAAD,CACE5B,SAAU6E,KAAKZ,MAAMjE,SACrBO,WAAYsE,KAAKZ,MAAM1D,WACvBM,YAAagE,KAAKZ,MAAMpD,oB,GA1KlBiE,IAAMC,WCLJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,6BACE,kBAAE,EAAF,MACA,kBAAE,EAAF,OACMC,SAASC,eAAe,SDsH5B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.bfbc7428.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableData = (props) => {\r\n\r\n  let cellSize = props.cellSize;\r\n  return (\r\n    < td\r\n      className=\"table__data\"\r\n      style={{ width: cellSize + 'px', height: cellSize + 'px' }}\r\n    ></td>\r\n  )\r\n}\r\n\r\nTableData.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n}\r\n\r\nconst TableRow = (props) => {\r\n\r\n  const tableElement = props.widthArray.map(cell => <TableData\r\n    cellSize={props.cellSize}\r\n    key={cell.id} />)\r\n\r\n  return (\r\n    <tr className=\"table__row\">\r\n      {tableElement}\r\n    </tr>\r\n  )\r\n}\r\n\r\nTableRow.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n  widthArray: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number).isRequired),\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport TableRow from './TableRow/TableRow';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableBody = (props) => {\r\n  const tableElement = props.heightArray.map(row => <TableRow\r\n    widthArray={props.widthArray}\r\n    cellSize={props.cellSize}\r\n    key={row.id} />)\r\n\r\n  return (\r\n    <tbody className=\"table__body\">\r\n      {tableElement}\r\n    </tbody>\r\n  )\r\n}\r\n\r\nTableBody.propTypes = {\r\n  cellSize: PropTypes.number.isRequired,\r\n  heightArray: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number).isRequired),\r\n  widthArray: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number).isRequired),\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n\r\n  let classNames = require('classnames');\r\n\r\n  const btnClass = classNames({\r\n    button: true,\r\n    'button_minus-data button_minus': props.minusData,\r\n    'button_minus-row button_minus': props.minusRow,\r\n    'button_plus-data button_plus': props.plusData,\r\n    'button_plus-row button_plus': props.plusRow,\r\n  })\r\n\r\n  return (\r\n    <td\r\n      className={btnClass}\r\n      onClick={props.click}\r\n      style={{\r\n        visibility: props.visible,\r\n        opacity: props.opacity,\r\n        transform: `translate(${props.moveX * 100}%, ${props.moveY * 100}%)`\r\n      }}\r\n    >{props.name}</td>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  click: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  styleName: PropTypes.string.isRequired,\r\n  moveX: PropTypes.number,\r\n  moveY: PropTypes.number,\r\n  opacity: PropTypes.number,\r\n  visible: PropTypes.string,\r\n}\r\n\r\nconst RowButtons = (props) => {\r\n\r\n  const addData = (e) => {\r\n    for (let i = 0; i < e.target.closest('tr').children.length; i++) {\r\n\r\n      if (e.target.closest('tr').children[i].classList.contains('button_minus-data')) {\r\n        props.addCell(e.target.closest('tr').children[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const addRow = (e) => {\r\n    for (let i = 0; i < e.target.closest('tr').children.length; i++) {\r\n\r\n      if (e.target.closest('tr').children[i].classList.contains('button_minus-row')) {\r\n        props.addRow(e.target.closest('tr').children[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const minusCell = (e) => {\r\n    props.minusCell(e.target);\r\n  }\r\n\r\n  const minusRow = (e) => {\r\n    props.minusRow(e.target);\r\n  }\r\n\r\n  return (\r\n    <tr className=\"row-buttons\">\r\n      <Button name=\"+\" styleName=\"button_plus-row \" click={addRow} plusRow={' '} />\r\n      <Button name=\"+\" styleName=\"button_plus-data \" click={addData} plusData={' '} />\r\n      <Button\r\n        name=\"-\"\r\n        visible={props.visibility}\r\n        opacity={props.opacity}\r\n        moveX={0}\r\n        moveY={props.transformY}\r\n        styleName=\"button_minus-row\"\r\n        click={minusRow}\r\n        minusRow={' '}\r\n      />\r\n      <Button\r\n        name=\"-\"\r\n        opacity={props.opacity}\r\n        visible={props.visibility}\r\n        moveY={0}\r\n        moveX={props.transformX}\r\n        styleName=\"button_minus-data \"\r\n        click={minusCell}\r\n        minusData={' '}\r\n      />\r\n    </tr>\r\n  )\r\n}\r\n\r\nRowButtons.propTypes = {\r\n  addCell: PropTypes.func.isRequired,\r\n  addRow: PropTypes.func.isRequired,\r\n  minusCell: PropTypes.func.isRequired,\r\n  minusRow: PropTypes.func.isRequired,\r\n  opacity: PropTypes.number,\r\n  transformX: PropTypes.number,\r\n  transformY: PropTypes.number,\r\n}\r\n\r\nexport default RowButtons;","import React from 'react';\nimport './App.css';\nimport TableBody from './components/TableBody/TableBody';\nimport RowButtons from './components/TableHead/RowButtons/RowButtons';\n\n// const state = {\n//   widthArray: [],\n//   heightArray: [],\n//   cellSize: 50,\n//   transformY: 1,\n//   transformX: 1,\n//   visibility: 'visible',\n//   initialWidth: 4,\n//   initialHeight: 4,\n//   opacity: 0\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widthArray: [],\n      heightArray: [],\n      cellSize: 50,\n      transformY: 1,\n      transformX: 1,\n      visibility: 'visible',\n      initialWidth: 4,\n      initialHeight: 4,\n      opacity: 0\n    }\n    this.visibilityButton = this.visibilityButton.bind(this)\n    this.tableFn = this.tableFn.bind(this)\n    this.addCell = this.addCell.bind(this)\n    this.addRow = this.addRow.bind(this)\n    this.minusCell = this.minusCell.bind(this)\n    this.minusRow = this.minusRow.bind(this)\n    this.setDisplay = this.setDisplay.bind(this)\n    this.arrayCicle = this.arrayCicle.bind(this)\n    this.arrayCicle(this.state.initialWidth, this.state.widthArray)\n    this.arrayCicle(this.state.initialHeight, this.state.heightArray)\n  }\n\n  arrayCicle = (current, array) => {\n    for (let i = 1; i <= current; i++) {\n      array.push({\n        id: i\n      })\n    }\n  }\n\n  setDisplay = (elem, display) => {\n    elem.style.display = display;\n  }\n\n  visibilityButton = (e) => {\n    const targetButtonMinus = e.target.classList.contains('button_minus')\n    const targetData = e.target.classList.contains('table__data')\n\n    if (targetButtonMinus || targetData) {\n      this.setState({\n        visibility: 'visible',\n        opacity: 1\n      })\n    } else {\n      this.setState({\n        visibility: 'hidden',\n        opacity: 0\n      })\n    }\n  }\n\n  tableFn = (e) => {\n    const target = e.target,\n      targetRow = e.target.closest('tr'),\n      targetTable = e.target.closest('tbody'),\n      index = e.target.closest('table').children[1].children.length;\n\n    if (targetRow != null && targetTable != null) {\n      for (let i = 0; i < index; i++) {\n        if (targetTable.children[i] === targetRow) {\n          this.setState({\n            transformY: i\n          })\n        }\n      };\n\n      for (let i = 0; i < targetRow.children.length; i++) {\n        if (targetRow.children[i] === target) {\n          this.setState({\n            transformX: i\n          })\n        }\n      };\n    }\n  }\n\n  addCell = (ref) => {\n    const widthArray = this.state.widthArray;\n\n    if (widthArray.length === 1) {\n      this.setDisplay(ref, 'flex')\n    }\n    const lenghtArray = widthArray.length + Math.random();\n    widthArray.push({\n      id: lenghtArray\n    })\n    this.setState({\n      widthArray: widthArray\n    })\n  }\n\n  addRow = (ref) => {\n    const heightArray = this.state.heightArray;\n\n    if (heightArray.length === 1) {\n      this.setDisplay(ref, 'flex')\n    }\n\n    const lenghtArray = heightArray.length + Math.random();\n    heightArray.push({\n      id: lenghtArray\n    })\n    this.setState({\n      heightArray: heightArray\n    })\n  }\n\n  minusCell = (ref) => {\n    const widthArray = this.state.widthArray;\n\n    if (widthArray.length === 2) {\n      this.setDisplay(ref, 'none')\n    }\n\n    const index = Number(ref.style.webkitTransform.replace(/\\D+/g, \"\")) / 1000;\n    widthArray.splice(index, 1);\n    this.setState({\n      widthArray: widthArray\n    })\n\n    if (widthArray.length === index) {\n      this.setState({\n        transformX: this.state.transformX - 1\n      })\n    }\n  }\n\n  minusRow = (ref) => {\n    const heightArray = this.state.heightArray;\n\n    if (heightArray.length === 2) {\n      this.setDisplay(ref, 'none')\n    }\n\n    const index = Number(ref.style.webkitTransform.replace(/\\D+/g, \"\")) / 100;\n    heightArray.splice(index, 1);\n    this.setState({\n      heightArray: heightArray\n    })\n\n    if (heightArray.length === index) {\n      this.setState({\n        transformY: this.state.transformY - 1\n      })\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"wrapper\" onMouseMove={this.visibilityButton} >\n        <table className=\"table\" onMouseMove={this.tableFn} >\n          <thead className=\"table__head\" >\n            <RowButtons addCell={this.addCell}\n              addRow={this.addRow}\n              minusCell={this.minusCell}\n              minusRow={this.minusRow}\n              visibility={this.state.visibility}\n              transformY={this.state.transformY}\n              transformX={this.state.transformX}\n              opacity={this.state.opacity}\n            />\n          </thead>\n          <TableBody\n            cellSize={this.state.cellSize}\n            widthArray={this.state.widthArray}\n            heightArray={this.state.heightArray} />\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    < App />\n    < App />\n  </div>, document.getElementById('root'));\n\nserviceWorker.unregister();\n// serviceWorker.unregister();"],"sourceRoot":""}